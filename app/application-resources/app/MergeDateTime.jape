/*
*  MergeDateTime.jape
*
* This file define new rules to GATE to annotate Slovak format dates and languages
*
*  Filip Ogurcak, 17 Nov 2012
* 
*/

Phase:   Final
Input: SK_DateTime Split
Options: control = appelt




Rule: DateTimeFinal
Priority: 20

(
 ({SK_DateTime.kind == date})
 ({SK_DateTime.kind == time})
 
)
:DateTime
-->
 {
//removes TempDate annotation, gets the rule feature and adds a new Date annotation
gate.AnnotationSet date = (gate.AnnotationSet)bindings.get("DateTime");

gate.FeatureMap features = Factory.newFeatureMap();

for(Annotation dateAnn :date){
if(dateAnn.getFeatures().get("DAY") != null) features.put("DAY", dateAnn.getFeatures().get("DAY"));
if(dateAnn.getFeatures().get("MONTH") != null) features.put("MONTH", dateAnn.getFeatures().get("MONTH"));
if(dateAnn.getFeatures().get("YEAR") != null) features.put("YEAR", dateAnn.getFeatures().get("YEAR"));
if(dateAnn.getFeatures().get("HOUR") != null) features.put("HOUR", dateAnn.getFeatures().get("HOUR"));
if(dateAnn.getFeatures().get("MINUTE") != null) features.put("MINUTE", dateAnn.getFeatures().get("MINUTE"));
if(dateAnn.getFeatures().get("DAY_OF_WEEK") != null) features.put("DAY_OF_WEEK", dateAnn.getFeatures().get("DAY_OF_WEEK"));
if(dateAnn.getFeatures().get("AddDAY") != null) features.put("AddDAY", dateAnn.getFeatures().get("AddDAY"));
if(dateAnn.getFeatures().get("AddMONTH") != null) features.put("AddMONTH", dateAnn.getFeatures().get("AddMONTH"));
if(dateAnn.getFeatures().get("AddYEAR") != null) features.put("AddYEAR", dateAnn.getFeatures().get("AddYEAR"));
if(dateAnn.getFeatures().get("AddHOUR") != null) features.put("AddHOUR", dateAnn.getFeatures().get("AddHOUR"));
if(dateAnn.getFeatures().get("AddMINUTE") != null) features.put("AddMINUTE", dateAnn.getFeatures().get("AddMINUTE"));
}

features.put("rule", "DateTimeFinal");
outputAS.add(date.firstNode(), date.lastNode(), "SK_DateTime", features);
outputAS.removeAll(date);
}



Rule: TimeDateFinal
Priority: 15


(
 ({SK_DateTime.kind == time})
 ({SK_DateTime.kind == date})
 
)
:DateTime
-->
 {
//removes TempDate annotation, gets the rule feature and adds a new Date annotation
gate.AnnotationSet date = (gate.AnnotationSet)bindings.get("DateTime");

gate.FeatureMap features = Factory.newFeatureMap();

for(Annotation dateAnn :date){
if(dateAnn.getFeatures().get("DAY") != null) features.put("DAY", dateAnn.getFeatures().get("DAY"));
if(dateAnn.getFeatures().get("MONTH") != null) features.put("MONTH", dateAnn.getFeatures().get("MONTH"));
if(dateAnn.getFeatures().get("YEAR") != null) features.put("YEAR", dateAnn.getFeatures().get("YEAR"));
if(dateAnn.getFeatures().get("HOUR") != null) features.put("HOUR", dateAnn.getFeatures().get("HOUR"));
if(dateAnn.getFeatures().get("MINUTE") != null) features.put("MINUTE", dateAnn.getFeatures().get("MINUTE"));
if(dateAnn.getFeatures().get("DAY_OF_WEEK") != null) features.put("DAY_OF_WEEK", dateAnn.getFeatures().get("DAY_OF_WEEK"));
if(dateAnn.getFeatures().get("AddDAY") != null) features.put("AddDAY", dateAnn.getFeatures().get("AddDAY"));
if(dateAnn.getFeatures().get("AddMONTH") != null) features.put("AddMONTH", dateAnn.getFeatures().get("AddMONTH"));
if(dateAnn.getFeatures().get("AddYEAR") != null) features.put("AddYEAR", dateAnn.getFeatures().get("AddYEAR"));
if(dateAnn.getFeatures().get("AddHOUR") != null) features.put("AddHOUR", dateAnn.getFeatures().get("AddHOUR"));
if(dateAnn.getFeatures().get("AddMINUTE") != null) features.put("AddMINUTE", dateAnn.getFeatures().get("AddMINUTE"));
}

features.put("rule", "TimeDateFinal");
outputAS.add(date.firstNode(), date.lastNode(), "SK_DateTime", features);
outputAS.removeAll(date);
}
